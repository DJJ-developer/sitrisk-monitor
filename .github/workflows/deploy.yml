name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
    - name: 📂 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🌍 Validate HTML Files
      run: |
        echo "🔍 Validating HTML files..."
        for file in *.html; do
          if [ -f "$file" ]; then
            echo "✅ Found: $file"
          fi
        done
        
    - name: 📊 Validate JavaScript Files
      run: |
        echo "🔍 Validating JavaScript files..."
        for file in *.js; do
          if [ -f "$file" ]; then
            echo "✅ Found: $file"
            # Basic syntax check
            node -c "$file" && echo "✅ $file syntax OK"
          fi
        done
        
    - name: 🎨 Validate CSS Files
      run: |
        echo "🔍 Validating CSS files..."
        for file in *.css; do
          if [ -f "$file" ]; then
            echo "✅ Found: $file"
          fi
        done

    - name: 🚀 Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        exclude_assets: '.github'
        
    - name: 📈 Generate Deployment Report
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        echo "## 🚀 Deployment Report" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Site Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **HTML Files**: $(find . -name '*.html' | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "- **JavaScript Files**: $(find . -name '*.js' | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "- **CSS Files**: $(find . -name '*.css' | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "### 🌍 Access Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Live URL**: https://djj-developer.github.io/sitrisk-monitor/" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Deployed Successfully" >> $GITHUB_STEP_SUMMARY
        
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔒 Basic Security Check
      run: |
        echo "## 🔒 Security Check Report" >> security-report.md
        echo "### AdSense Policy Compliance" >> security-report.md
        
        # Check for fake ad content
        if grep -qi "fake.*ad\|premium.*ad.*banner\|fake.*revenue" *.html *.js; then
          echo "❌ Potential fake ad content found" >> security-report.md
        else
          echo "✅ No fake ad content detected" >> security-report.md
        fi
        
        # Check for proper AdSense containers
        if grep -q "google_ad_client\|data-ad-client" *.html *.js; then
          echo "✅ AdSense containers found" >> security-report.md
        else
          echo "⚠️ No AdSense containers detected" >> security-report.md
        fi
        
        echo "### External Resources" >> security-report.md
        echo "CDN sources used:" >> security-report.md
        grep -o "https://[^'\"]*" *.html | grep -E "(cdn|googleapis|cloudflare)" >> security-report.md || echo "None found" >> security-report.md
        
        cat security-report.md
        
    - name: 📊 Upload Security Report
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-report
        path: security-report.md 